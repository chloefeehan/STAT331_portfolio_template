---
title: "Lab 5"
author: "Chloe Feehan"
format:
  html: 
    self-contained: true
    code-tools: true
    code-fold: true
execute:
  echo: true
  error: true
  message: false
  warning: false
---

```{r}
library(tidyverse)
library(here)
library(forcats)

surveys <- read_csv(here("Labs", "Lab 5", "surveys.csv"))

surveys <- surveys |>
  mutate(
   species = as.factor(species)
  ) 

days <- surveys |>
  select(day_of_week)
```

## Revisiting Lab 2

```{r}
 ggplot(data = surveys, mapping = aes(weight, fct_reorder(species, weight))) +
    geom_jitter(color = "orange", alpha = .1) +
    geom_boxplot(outlier.shape = NA) + 
    labs(x= "Weight (g)", y = "", title = "Species of Rodent by Weight (g)")


```

## Time Series Plot


```{r}

ggplot(data = surveys, mapping = aes(x = year, y = weight, color = genus)) +
    geom_line(stat = "identity") +
    labs(x= "Year", y = "Weight (g)", title = "Time Series Genus of Rodent")

```
### 2. Take the mean weights

```{r}

mean_plot <- surveys |> 
  group_by(year, genus) |>
  summarize(
    mean_weight = mean(weight)
  )

ggplot(data = mean_plot, 
       mapping = aes(x = year, 
                     y = mean_weight, 
                     color = genus)) +
    geom_line(stat = "identity") +
    labs(x= "Year", title = "Mean Weight of Rodent Genus by Year")

```


### 3. Reorder the legend
```{r}

ggplot(data = mean_plot, 
       mapping = aes(x = year, 
                     y = mean_weight, 
                     color = fct_reorder2(genus, 
                                          year, 
                                          mean_weight))) +
    geom_line(stat = "identity") +
    labs(x= "Year", title = "Mean Weight of Rodent Genus by Year")

```

### 4. Relabeling

```{r}
ggplot(data = mean_plot, 
       mapping = aes(x = year, 
                     y = mean_weight, 
                     color = fct_reorder2(genus, 
                                          year, 
                                          mean_weight))) +
    geom_line(stat = "identity") +
    labs(x= "Year", y = "", title = "Time Series Mean Weight (g) of Rodent Genus", color = "Genus")
```

## Caputures over the Week

### 1. Create Visualization
```{r}
surveys <- surveys |>
  drop_na(day_of_week)
ggplot(data = surveys, mapping = aes(x = day_of_week)) +
  geom_bar(fill = "darkslategray4") +
  labs(x = "Day of the Week", y = "Number of Rodents", 
       title = "Number of Rodents Captured by Day of the Week")
```

### 2. Change order of the week

```{r}
ggplot(data = surveys, mapping = aes(x = fct_relevel(
                                         day_of_week, 
                                         c("Mon", "Tue", 
                                           "Wed", "Thu", "Fri", 
                                           "Sat", "Sun")))) +
  geom_bar(fill = "darkslategray4") +
  labs(x = "Day of the Week", y = "Number of Rodents", 
       title = "Number of Rodents Captured by Day of the Week")
```
### 3. Collapse Monday through Friday into a "Weekday" level, and collapse Saturday and Sunday into a "Weekend" level. Plot the number of rodents captured between the two groups.


```{r}
ggplot(data = surveys, mapping = aes(x = fct_collapse(
                                         day_of_week,
                                         Weekday = c("Mon", "Tue", 
                                           "Wed", "Thu", "Fri"),
                                         Weekend = c("Sat", "Sun")
                                         )))+
  geom_bar(fill = "darkslategray4") +
  labs(x = "Day of the Week", y = "Number of Rodents", 
       title = "Number of Rodents Captured by Day of the Week")


```

Revision

Originally, my title for the plot for Time Series, Question 4 said "Mean Weight of Genus of Rodent by year". However, in order to make if more specific, I added the units of the mean weight (g), and then I changed it so that is said Time Series. By changing it to time series, it tells the reader of the graph that they are tracking the same sample over time. 

